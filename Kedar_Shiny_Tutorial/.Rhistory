(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3))
? geom_point
View(high_injure_loc_ped)
View(high_injure_loc_ped)
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size='Inj_No'))
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size="Inj_No"))
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=Inj_No))
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3))
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3, shape=4))
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3, shape=1))
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3))
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3, alpha=1))
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3, alpha=10))
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3, alpha=0.1))
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3, alpha=0.5))
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3, alpha=0.8))
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3, alpha=1))
nycmap <- get_map(location = "Queens, New York", zoom=11)
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3, alpha=1))
library(ggmap)
nycmap <- get_map(location = "Queens, New York", zoom=11)
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3, alpha=1))
nycmap <- get_map(location = "Flatiron, New York", zoom=13)
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - Mid, Lower Manhattan")
+ theme(plot.title=element_text(size=rel(2), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=4))
nycmap <- get_map(location = "Queens, New York", zoom=11)
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - 2013-2014")
+ theme(plot.title=element_text(size=rel(1), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=3, alpha=1))
nycmap <- get_map(location = "Harlem, New York", zoom=14)
(nyc1 <- ggmap(nycmap) + scale_color_discrete(name = ">=15 Pedestrians Injured - 2013-2014")
+ ggtitle(">=15 Pedestrians Injured - Upper Manhattan & Bronx")
+ theme(plot.title=element_text(size=rel(1), face="bold"))
+ theme(legend.text=element_text(size=0),
legend.title=(element_text(size=0)),
legend.position="none")
+ geom_point(data=high_injure_loc_ped, aes(LONGITUDE, LATITUDE, color = 'Pedestrians'), size=4))
```{r}
? rbind
---
nycmvc_data <- read.csv("/Users/kedarpatil/edav/data/NYPD_Motor_Vehicle_Collisions.csv")
#FIXING DATES
nycmvc_data$DATE <- as.Date(nycmvc_data$DATE, format='%m/%d/%Y')
#CREATING SUMMARY TABLE
library(plyr)
mth_frq_all <- ddply(nycmvc_data, c(year_grp="strftime(nycmvc_data$DATE, format='%Y')",
mnth_grp="strftime(nycmvc_data$DATE, format='%m')"),
summarise, Inj_Pers=sum(NUMBER.OF.PERSONS.INJURED),
Fat_Pers=sum(NUMBER.OF.PEDESTRIANS.KILLED))
#CHARACTER TO NUMERIC
mth_frq_all$mnth_grp <- as.numeric(mth_frq_all$mnth_grp)
#PLOT 2013-2014 INJURIES ONLY
library(dplyr)
fltr_mth_frq_all <- filter(mth_frq_all, year_grp=="2013"|year_grp=="2014")
#PLOT INJURIES
require(ggplot2)
require(scales) # for removing scientific notation
(ggplot(fltr_mth_frq_all, aes(x=mnth_grp, y=Inj_Pers, color=year_grp, xmin=1, xmax=12, ymin=0, ymax = 7000))
+ geom_line(size=1) + geom_point(size=3)
+ ggtitle("YoY Overall Injuries - 2013-2014")
+ scale_y_continuous(labels = comma)
+ scale_x_discrete(labels = comma)
+ theme(plot.title=element_text(size=rel(1.5), face="bold"))
+ theme(axis.title=element_text(size=15),
axis.text=element_text(size=10),
legend.text=element_text(size=10),
legend.title=(element_text(size=10)))
+ labs(x="Month", y="Observed Frequency", color="Year"))
#PLOT 2013-2014 INJURIES ONLY - DEEPER DIVE
mth_frq_deep <- ddply(nycmvc_data, c(year_grp="strftime(nycmvc_data$DATE, format='%Y')",
mnth_grp="strftime(nycmvc_data$DATE, format='%m')"),
summarise,
Pedestrians=sum(NUMBER.OF.PEDESTRIANS.INJURED),
Cyclists=sum(NUMBER.OF.CYCLIST.INJURED),
Motorists=sum(NUMBER.OF.MOTORIST.INJURED))
#CHARACTER TO NUMERIC
mth_frq_deep$mnth_grp <- as.numeric(mth_frq_deep$mnth_grp)
library(dplyr)
fltr_mth_frq_deep <- filter(mth_frq_deep, year_grp=="2013"| year_grp=="2014")
#MELTING DATA
require(reshape2)
tmp_melt <- melt(fltr_mth_frq_deep,
id = c("year_grp", "mnth_grp"),
variable.name = "Injury_Category", value.name = "Freq")
tmp_melt_bar <- ddply(tmp_melt, c("year_grp","Injury_Category"),
summarise, "Frequency" = sum(Freq))
require(scales) # for removing scientific notation
(ggplot(tmp_melt_bar, aes(x=Injury_Category, y=Frequency, fill=year_grp, ymax = 45000)) + geom_bar(position="dodge",stat="identity")
+ geom_text(aes(label=comma(Frequency)), vjust=-1, size=3.5, position=position_dodge(.9))
+ scale_y_continuous(labels = comma)
+ ggtitle("YoY Injuries by Category - 2013-2014")
+ theme(plot.title=element_text(size=rel(1.5), face="bold"))
+ theme(axis.title=element_text(size=15),
axis.text=element_text(size=10),
legend.text=element_text(size=10),
legend.title=(element_text(size=10)))
+ labs(x="Injury Category", y="Observed Frequency", fill="Year"))
View(tmp_melt)
#PLOT 2013-2014 INJURIES ONLY - DEEPER DIVE - LINE
tmp_melt_line <- ddply(tmp_melt, c("mnth_grp","Injury_Category"),
summarise, "Frequency" = sum(Freq))
(ggplot(tmp_melt_line, aes(x=mnth_grp, y=Frequency, color=Injury_Category, xmin=1, xmax=12, ymin=0))
+ geom_line(size=1) + geom_point(size=3)
+ ggtitle("Injuries by Category - 2013-2014")
+ scale_y_continuous(labels = comma)
+ scale_x_discrete(labels = comma)
+ theme(plot.title=element_text(size=rel(1.5), face="bold"))
+ theme(axis.title=element_text(size=15),
axis.text=element_text(size=10),
legend.text=element_text(size=10),
legend.title=(element_text(size=10)))
+ labs(x="Month", y="Observed Frequency", color="Category"))
#PLOT VEHICLE TYPE AND INJURY
inj_veh_typ <- ddply(filter(nycmvc_data, DATE>"2012-12-31" & DATE<"2015-01-01"),
c("VEHICLE.TYPE.CODE.1"),
summarise,
Pedestrians=sum(NUMBER.OF.PEDESTRIANS.INJURED),
Cyclists=sum(NUMBER.OF.CYCLIST.INJURED),
Motorists=sum(NUMBER.OF.MOTORIST.INJURED))
tmp_melt <- melt(inj_veh_typ,
id = c("VEHICLE.TYPE.CODE.1"),
variable.name = "Injury_Category", value.name = "Frequency")
tmp_melt_bar <- filter(tmp_melt, Injury_Category=="Pedestrians")
tmp_melt_bar <- filter(tmp_melt, Injury_Category=="Cyclists")
tmp_melt_bar <- filter(tmp_melt, Injury_Category=="Motorists")
require(scales) # for removing scientific notation
(ggplot(tmp_melt_bar, aes(x=reorder(VEHICLE.TYPE.CODE.1,Frequency), y=Frequency, fill=VEHICLE.TYPE.CODE.1))
+ geom_bar(stat="identity")
+ coord_flip()
#+ geom_text(aes(label=comma(Frequency)), vjust=-1, size=6, position=position_dodge(.9))
+ scale_y_continuous(labels = comma)
+ ggtitle("Injuries by Vehicle Type - 2013-2014 - Pedestrians")
# + ggtitle("Injuries by Vehicle Type - 2013-2014 - Cyclists")
# + ggtitle("Injuries by Vehicle Type - 2013-2014 - Motorists")
+ theme(plot.title=element_text(size=rel(1), face="bold"))
+ theme(axis.title=element_text(size=15),
axis.text=element_text(size=10),
#        legend.text=element_text(size=10),
legend.title=(element_text(size=10)))
+ guides(fill=FALSE)
+ labs(x="Injury Category", y="Observed Frequency", fill="Vehicle"))
nycmvc_data <- read.csv("/Users/kedarpatil/edav/data/NYPD_Motor_Vehicle_Collisions.csv")
View(nycmvc_data)
nycmvc_data <- read.csv("/Users/kedarpatil/edav/data/NYPD_Motor_Vehicle_Collisions.csv")
mth_frq_all <- ddply(nycmvc_data, c(year_grp="strftime(nycmvc_data$DATE, format='%Y')",
mnth_grp="strftime(nycmvc_data$DATE, format='%m')"),
summarise, Inj_Pers=sum(NUMBER.OF.PERSONS.INJURED),
Fat_Pers=sum(NUMBER.OF.PEDESTRIANS.KILLED))
library(plyr)
mth_frq_all <- ddply(nycmvc_data, c(year_grp="strftime(nycmvc_data$DATE, format='%Y')",
mnth_grp="strftime(nycmvc_data$DATE, format='%m')"),
summarise, Inj_Pers=sum(NUMBER.OF.PERSONS.INJURED),
Fat_Pers=sum(NUMBER.OF.PEDESTRIANS.KILLED))
nycmvc_data$DATE <- as.Date(nycmvc_data$DATE, format='%m/%d/%Y')
range(nycmvc_data$DATE)
mth_frq_all <- ddply(nycmvc_data, c(year_grp="strftime(nycmvc_data$DATE, format='%Y')",
mnth_grp="strftime(nycmvc_data$DATE, format='%m')"),
summarise, Inj_Pers=sum(NUMBER.OF.PERSONS.INJURED),
Fat_Pers=sum(NUMBER.OF.PEDESTRIANS.KILLED))
View(mth_frq_all)
mth_frq_all$mnth_grp <- as.numeric(mth_frq_all$mnth_grp)
View(mth_frq_all)
fltr_mth_frq_all <- filter(mth_frq_all, year_grp=="2013"|year_grp=="2014")
require(scales) # for removing scientific notation
mth_frq_deep <- ddply(nycmvc_data, c(year_grp="strftime(nycmvc_data$DATE, format='%Y')",
mnth_grp="strftime(nycmvc_data$DATE, format='%m')"),
summarise,
Pedestrians=sum(NUMBER.OF.PEDESTRIANS.INJURED),
Cyclists=sum(NUMBER.OF.CYCLIST.INJURED),
Motorists=sum(NUMBER.OF.MOTORIST.INJURED))
View(mth_frq_all)
View(mth_frq_deep)
mth_frq_deep$mnth_grp <- as.numeric(mth_frq_deep$mnth_grp)
library(dplyr)
fltr_mth_frq_deep <- filter(mth_frq_deep, year_grp=="2013"| year_grp=="2014")
require(reshape2)
View(fltr_mth_frq_deep)
tmp_melt <- melt(fltr_mth_frq_deep,
id = c("year_grp", "mnth_grp"),
variable.name = "Injury_Category", value.name = "Freq")
View(tmp_melt)
View(fltr_mth_frq_deep)
require(scales)
ggplot(tmp, aes(x=bric_data$Country, y=data1, fill=bric_data$Country)) +
geom_bar(stat="identity") +
geom_text(aes(label=as.numeric(data1)), vjust=-0.5, size=3.5) +
scale_y_continuous(labels = "comma") +
theme(plot.title=element_text(size=rel(2.5), face="bold")) +
theme(axis.title.x=element_text(size=0),
axis.title.y=element_text(size=13),
axis.text=element_text(size=13),
legend.text=element_text(size=13),
legend.title=(element_text(size=0))) +
labs(y=input$types)
library(ggplot2)
ggplot(tmp, aes(x=bric_data$Country, y=data1, fill=bric_data$Country)) +
geom_bar(stat="identity") +
geom_text(aes(label=as.numeric(data1)), vjust=-0.5, size=3.5) +
scale_y_continuous(labels = "comma") +
theme(plot.title=element_text(size=rel(2.5), face="bold")) +
theme(axis.title.x=element_text(size=0),
axis.title.y=element_text(size=13),
axis.text=element_text(size=13),
legend.text=element_text(size=13),
legend.title=(element_text(size=0))) +
labs(y=input$types)
library("shiny")
library(ggplot2)
bric_data <- read.csv("Bric_data.csv")
data1 <- switch(input$types,
"Population"=bric_data$Population_Million,
"GDP per Capita"=bric_data$GDP_per_Capita,
"Population Growth Rate"=(bric_data$Population_Growth_Rate*100),
"Inflation Rate"=(bric_data$Inflation_Rate*100),
"Unemployment Rate"=(bric_data$Unemployment_Rate*100))
tmp <- data.frame(bric_data$Country,data1)
bric_data <- read.csv("Bric_data.csv")
View(tmp_melt)
View(nycmvc_data)
devtools::install_github("rstudio/shinydashboard")
library(shiny)
runApp("activity-dashboard/")
ensure_version <- function(pkg, ver = "0.0") {
if (system.file(package = pkg)  == "" || packageVersion(pkg) < ver)
install.packages(pkg)
}
ensure_version("devtools", "1.7.0")
ensure_version("jsonlite", "0.9.16")
devtools::install_github("rstudio/shiny@interact-ggplot") # For ggplot2 interaction
devtools::install_github("rstudio/shinydashboard")
devtools::install_github("rstudio/leaflet")
devtools::install_github("pilrhealth/pilr.api.r")
library(shiny)
runApp("activity-dashboard/")
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
server <- function(input, output) {
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
dashboardSidebar(),
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(title = "Basic dashboard"),
dashboardSidebar(),
dashboardBody(
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
sliderInput("slider", "Number of observations:", 1, 100, 50)
)
)
)
)
server <- function(input, output) {
set.seed(122)
histdata <- rnorm(500)
output$plot1 <- renderPlot({
data <- histdata[seq_len(input$slider)]
hist(data)
})
}
shinyApp(ui, server)
library("shiny")
getwd()
setwd("/Users/kedarpatil/Documents/St-4701 - Data Visualization/team-shiny/Shiny_Tutorial")
getwd()
setwd("/Users/kedarpatil/Documents/St-4701 - Data Visualization/team-shiny/Shiny_Tutorial")
library("shiny")
getwd()
setwd("/Users/kedarpatil/Documents/St-4701 - Data Visualization/team-shiny/Shiny_Tutorial")
setwd("/Users/kedarpatil/Documents/St-4701 - Data Visualization/team-shiny/Kedar_Shiny_Tutorial")
runApp("old_faithful")
runApp("old_faithful", display.mode="showcase")
system.file("examples", package="shiny")
runExample("01_hello") # a histogram
runExample("05_sliders") # slider bars
runExample("02_text", display.mode="showcase") # tables and data frames
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
runApp("old_faithful_dynamic")
